html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  font-size: 100%;
  vertical-align: baseline;
}
body {
  line-height: 1;
  color: #000;
  background: #fff;
}
ol,
ul {
  list-style: none;
}
table {
  border-collapse: separate;
  border-spacing: 0;
  vertical-align: middle;
}
caption,
th,
td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}
a img {
  border: none;
}
.hide {
  display: none;
}
a {
  color: #0096d7;
}
a:visited {
  color: #1e6491;
}
a:hover,
a:focus {
  text-decoration: underline;
}
h1,
h2,
h3,
h4 {
  font-family: 'Lato', 'Proxima Nova', Verdana, Geneva, Arial, sans-serif;
  font-weight: 300;
  line-height: 1.2;
}
h1 {
  font-size: 45px;
  margin: 45px 0 12px;
}
h2 {
  font-size: 36px;
  margin: 36px 0 12px;
}
h3 {
  font-size: 26px;
  margin: 31.2px 0 12px;
}
h4 {
  font-size: 22px;
  margin: 26.4px 0 12px;
}
p {
  margin: 15px 0;
}
p:after {
  content: '';
  clear: both;
  display: table;
}
strong {
  font-weight: 600;
}
em {
  font-style: italic;
}
blockquote {
  margin: 13px 0;
  padding: 0 0 0 17px;
  border-left: 3px solid #0096d7;
  font-style: italic;
}
ol {
  padding-left: 20px;
  list-style-type: decimal;
}
ul {
  padding-left: 33px;
  list-style: none;
  margin: 0;
  padding: 0;
}
ul li {
  padding: 2px 0 0 20px;
  position: relative;
}
ul li:first-child {
  margin-top: 0;
}
ul li:before {
  content: '';
  display: block;
  position: absolute;
  top: 9px;
  left: 5px;
  width: 8px;
  height: 8px;
  border: 1px solid #adadad;
  border-top-color: #bebebe;
  border-bottom-color: #adadad;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  border-radius: 50%;
  background: #fcfdfe;
}
html,
body {
  color: #111;
  background: #fdfeff;
  min-height: 400px;
  height: 100%;
  font-family: 'Droid Serif', Georgia, Times New Roman, serief;
  font-size: 16px;
  line-height: 1.5;
  margin: 0;
  padding: 0;
}
body.sidebar-open {
  overflow: hidden;
}
.page__header {
  background: #fdfeff;
  font-family: 'Lato', 'Proxima Nova', Verdana, Geneva, Arial, sans-serif;
  margin: 0;
  position: fixed;
  top: 0;
  right: auto;
  bottom: 0;
  left: 0;
  width: 289px;
}
@media (max-width: 839px) {
  .page__header {
    z-index: 100;
    left: 0;
    width: 100%;
    margin-left: -100%;
    -webkit-transition: margin 0.5s ease;
    -moz-transition: margin 0.5s ease;
    -o-transition: margin 0.5s ease;
    -ms-transition: margin 0.5s ease;
    transition: margin 0.5s ease;
  }
  .sidebar-open .page__header {
    margin-left: 0;
  }
}
.main {
  padding: 23px;
  width: auto;
  margin-left: 289px;
}
@media (max-width: 839px) {
  .main {
    margin-left: 0;
  }
  .sidebar-open .main {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
  }
}
/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */

code[class*="language-"],
pre[class*="language-"] {
	color: black;
	background: none;
	text-shadow: 0 1px white;
	font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
	font-size: 1em;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
	text-shadow: none;
	background: #b3d4fc;
}

pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
code[class*="language-"]::selection, code[class*="language-"] ::selection {
	text-shadow: none;
	background: #b3d4fc;
}

@media print {
	code[class*="language-"],
	pre[class*="language-"] {
		text-shadow: none;
	}
}

/* Code blocks */
pre[class*="language-"] {
	padding: 1em;
	margin: .5em 0;
	overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	background: #f5f2f0;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em;
	border-radius: .3em;
	white-space: normal;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: slategray;
}

.token.punctuation {
	color: #999;
}

.token.namespace {
	opacity: .7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
	color: #905;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #690;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
	color: #9a6e3a;
	background: hsla(0, 0%, 100%, .5);
}

.token.atrule,
.token.attr-value,
.token.keyword {
	color: #07a;
}

.token.function,
.token.class-name {
	color: #DD4A68;
}

.token.regex,
.token.important,
.token.variable {
	color: #e90;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

pre[data-line] {
	position: relative;
	padding: 1em 0 1em 3em;
}

.line-highlight {
	position: absolute;
	left: 0;
	right: 0;
	padding: inherit 0;
	margin-top: 1em; /* Same as .prismâ€™s padding-top */

	background: hsla(24, 20%, 50%,.08);
	background: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));

	pointer-events: none;

	line-height: inherit;
	white-space: pre;
}

	.line-highlight:before,
	.line-highlight[data-end]:after {
		content: attr(data-start);
		position: absolute;
		top: .4em;
		left: .6em;
		min-width: 1em;
		padding: 0 .5em;
		background-color: hsla(24, 20%, 50%,.4);
		color: hsl(24, 20%, 95%);
		font: bold 65%/1.5 sans-serif;
		text-align: center;
		vertical-align: .3em;
		border-radius: 999px;
		text-shadow: none;
		box-shadow: 0 1px white;
	}

	.line-highlight[data-end]:after {
		content: attr(data-end);
		top: auto;
		bottom: .4em;
	}

.line-numbers .line-highlight:before,
.line-numbers .line-highlight:after {
	content: none;
}

pre[class*="language-"].line-numbers {
	position: relative;
	padding-left: 3.8em;
	counter-reset: linenumber;
}

pre[class*="language-"].line-numbers > code {
	position: relative;
	white-space: inherit;
}

.line-numbers .line-numbers-rows {
	position: absolute;
	pointer-events: none;
	top: 0;
	font-size: 100%;
	left: -3.8em;
	width: 3em; /* works for line-numbers below 1000 lines */
	letter-spacing: -1px;
	border-right: 1px solid #999;

	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

}

	.line-numbers-rows > span {
		pointer-events: none;
		display: block;
		counter-increment: linenumber;
	}

		.line-numbers-rows > span:before {
			content: counter(linenumber);
			color: #999;
			display: block;
			padding-right: 0.8em;
			text-align: right;
		}

.token a {
	color: inherit;
}
div.code-toolbar {
	position: relative;
}

div.code-toolbar > .toolbar {
	position: absolute;
	top: .3em;
	right: .2em;
	transition: opacity 0.3s ease-in-out;
	opacity: 0;
}

div.code-toolbar:hover > .toolbar {
	opacity: 1;
}

/* Separate line b/c rules are thrown out if selector is invalid.
   IE11 and old Edge versions don't support :focus-within. */
div.code-toolbar:focus-within > .toolbar {
	opacity: 1;
}

div.code-toolbar > .toolbar .toolbar-item {
	display: inline-block;
}

div.code-toolbar > .toolbar a {
	cursor: pointer;
}

div.code-toolbar > .toolbar button {
	background: none;
	border: 0;
	color: inherit;
	font: inherit;
	line-height: normal;
	overflow: visible;
	padding: 0;
	-webkit-user-select: none; /* for button */
	-moz-user-select: none;
	-ms-user-select: none;
}

div.code-toolbar > .toolbar a,
div.code-toolbar > .toolbar button,
div.code-toolbar > .toolbar span {
	color: #bbb;
	font-size: .8em;
	padding: 0 .5em;
	background: #f5f2f0;
	background: rgba(224, 224, 224, 0.2);
	box-shadow: 0 2px 0 0 rgba(0,0,0,0.2);
	border-radius: .5em;
}

div.code-toolbar > .toolbar a:hover,
div.code-toolbar > .toolbar a:focus,
div.code-toolbar > .toolbar button:hover,
div.code-toolbar > .toolbar button:focus,
div.code-toolbar > .toolbar span:hover,
div.code-toolbar > .toolbar span:focus {
	color: inherit;
	text-decoration: none;
}

/* IMAGE LIGHTBOX SELECTOR */

#imagelightbox {
    cursor: pointer;
    position: fixed;
    z-index: 10000;
    top: 50%;
    touch-action: none;
    box-shadow: 0 0 3.125em rgba(0, 0, 0, .75); /* 50 */
}

.imagelightbox-scroll-lock {
    overflow: hidden;
}

.imagelightbox-disable-select {
    user-select: none;
}

/* WITH ACTIVITY INDICATION */

.imagelightbox-loading,
.imagelightbox-loading div {
    border-radius: 9999px;
}

.imagelightbox-loading {
    background-color: rgb(128, 128, 128);
    background-color: rgba(0, 0, 0, .5);
    position: fixed;
    z-index: 10003;
    top: 50%;
    left: 50%;
    padding: 0.65em;
    margin: -1.3em 0 0 -1.3em;
    box-shadow: 0 0 2.5em rgba(0, 0, 0, .75); /* 40 */
}

.imagelightbox-loading div {
    width: 1.3em;
    height: 1.3em;
    background-color: #fff;
    animation: imagelightbox-loading .5s ease infinite;
}

@keyframes imagelightbox-loading {
    from {
        opacity: .5;
        transform: scale(.75);
    }
    50% {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: .5;
        transform: scale(.75);
    }
}

/* WITH OVERLAY */

.imagelightbox-overlay {
    background-color: #fff;
    background-color: rgba(255, 255, 255, .9);
    position: fixed;
    z-index: 9998;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

/* WITH "CLOSE" BUTTON */

.imagelightbox-close {
    cursor: pointer;
    width: 2.5em; /* 40 */
    height: 2.5em; /* 40 */
    background-color: #666;
    position: fixed;
    z-index: 10002;
    top: 2.5em; /* 40 */
    right: 2.5em; /* 40 */
    border-radius: 50%;
    transition: color .3s ease;
}

.imagelightbox-close:hover {
    background-color: #111;
}

.imagelightbox-close:before,
.imagelightbox-close:after {
    width: 2px;
    background-color: #fff;
    content: '';
    position: absolute;
    top: 20%;
    bottom: 20%;
    left: 50%;
    margin-left: -1px;
}

.imagelightbox-close:before {
    transform: rotate(45deg);
}

.imagelightbox-close:after {
    transform: rotate(-45deg);
}

/* WITH CAPTION */

.imagelightbox-caption {
    text-align: center;
    color: #fff;
    background-color: #666;
    position: fixed;
    z-index: 10001;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 0.625em; /* 10 */
}

/* WITH NAVIGATION */

.imagelightbox-nav {
    background-color: #444;
    background-color: rgba(0, 0, 0, .5);
    position: fixed;
    z-index: 10001;
    left: 50%;
    bottom: 3.75em; /* 60 */
    padding: 0.313em; /* 5 */
    transform: translateX(-50%);
    border-radius: 20px;
}

.imagelightbox-nav a {
    position: relative;
    top: 0.2em;
    width: 1em; /* 20 */
    height: 1em; /* 20 */
    border: 1px solid #fff;
    display: inline-block;
    margin: 0 0.313em; /* 5 */
    border-radius: 50%;
}

.imagelightbox-nav .active {
    background-color: #fff;
}

/* WITH ARROWS */

.imagelightbox-arrow {
    cursor: pointer;
    width: 3.75em; /* 60 */
    height: 7.5em; /* 120 */
    background-color: #444;
    background-color: rgba( 0, 0, 0, .5 );
    vertical-align: middle;
    display: none;
    position: fixed;
    z-index: 10001;
    top: 50%;
    margin-top: -3.75em; /* 60 */
}
.imagelightbox-arrow:hover,
.imagelightbox-arrow:focus {
    background-color: #666;
    background-color: rgba( 0, 0, 0, .75 );
}
.imagelightbox-arrow:active {
    background-color: #111;
}
.imagelightbox-arrow-left {
    left: 2.5em; /* 40 */
}
.imagelightbox-arrow-right {
    right: 2.5em; /* 40 */
}
.imagelightbox-arrow:before {
    width: 0;
    height: 0;
    border: 1em solid transparent;
    content: '';
    display: inline-block;
    margin-bottom: -0.125em; /* 2 */
}
.imagelightbox-arrow-left:before {
    border-left: none;
    border-right-color: #fff;
    margin-left: -0.313em; /* 5 */
}
.imagelightbox-arrow-right:before {
    border-right: none;
    border-left-color: #fff;
    margin-right: -0.313em; /* 5 */
}

.imagelightbox-loading,
.imagelightbox-overlay,
.imagelightbox-close,
.imagelightbox-nav,
.imagelightbox-arrow {
    animation: fade-in .25s linear;
}

@keyframes fade-in {
    from	{ opacity: 0; }
    to		{ opacity: 1; }
}

@media only screen and (max-width: 41.250em) { /* 660 */
    #container {
        width: 100%;
    }
    .imagelightbox-close {
        top: 1.25em; /* 20 */
        right: 1.25em; /* 20 */
    }
    .imagelightbox-arrow {
        width: 2.5em; /* 40 */
        height: 3.75em; /* 60 */
        margin-top: -1.875em; /* 30 */
    }
    .imagelightbox-arrow-left {
        left: 1.25em; /* 20 */
    }
    .imagelightbox-arrow-right {
        right: 1.25em; /* 20 */
    }
}

@media only screen and (max-width: 20em) { /* 320 */
    .imagelightbox-arrow-left {
        left: 0;
    }
    .imagelightbox-arrow-right {
        right: 0;
    }
}

.listing {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 44px;
  overflow: auto;
  background: #f1f1f1;
  border-right: 1px solid #888;
}
.listing__header {
  border-bottom: 1px solid #888;
  color: #111;
  font-size: 21px;
  line-height: 1.3;
  margin: 0 14px;
  padding: 0;
  text-decoration: none;
}
.listing__header h1 {
  margin: 0;
  padding: 0 10px 0 0;
  height: 43px;
  line-height: 43px;
  font-weight: normal;
  font-size: 24px;
  text-decoration: none;
}
.listing__form {
  margin: 0;
  padding: 0;
  border: 0;
  height: 43px;
}
.listing__form-input {
  font-size: 19.2px;
  background: none;
  outline: none;
  border: 0;
  padding: 14px 0 9px;
  display: block;
  width: 100%;
}
.listing__form-button {
  display: none;
}
.listing__item {
  display: block;
  padding: 9px 14px;
  margin-top: 5px;
  cursor: pointer;
  font-size: 21px;
  line-height: 1.3;
  text-decoration: none;
}
.listing__item,
.listing__item:visited {
  color: #888;
}
.listing__item--active,
.listing__item--active:visited,
.listing__item--active:hover {
  cursor: default;
  background: none;
  font-weight: bold;
  color: #111;
}
.listing__item:hover,
.listing__item:focus {
  background: #e7e7e7;
  color: #111;
  text-decoration: none;
}
.listing__item--alert {
  font-size: 16px;
  background: #fdfeff;
  margin: 14px 14px;
  border: 1px solid #888;
  color: #111;
}
.listing__item--alert:hover {
  background: #fdfeff;
  cursor: default;
}
.portofolio {
  font-family: 'Lato', 'Proxima Nova', Verdana, Geneva, Arial, sans-serif;
  max-width: 642px;
}
.portofolio__header {
  margin: 15px 0 25px;
}
.portofolio__items {
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-lines: multiple;
  -moz-box-lines: multiple;
  -o-box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  -o-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}
.portofolio__item {
  display: block;
  width: 47%;
}
@media (max-width: 839px) {
  .portofolio__item {
    width: 100%;
  }
}
.portofolio__item:after {
  content: '';
  display: table;
  clear: both;
  height: 1px;
}
.portofolio__item-image-container {
  position: relative;
  display: block;
  overflow: hidden;
  height: 0;
  padding-bottom: 62%;
  background: #f4f4f4;
  -webkit-transition: opacity 0.2s;
  -moz-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  -ms-transition: opacity 0.2s;
  transition: opacity 0.2s;
}
.portofolio__item-image-container:hover,
.portofolio__item-image-container:focus {
  opacity: 0.9;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=90)";
  filter: alpha(opacity=90);
}
.portofolio__item-image-container--browser .portofolio__item-image-header {
  display: block;
}
.portofolio__item-image-container--browser .portofolio__item-image-wrapper {
  -webkit-box-shadow: 5px 5px 40px -5px rgba(0,0,0,0.3);
  box-shadow: 5px 5px 40px -5px rgba(0,0,0,0.3);
  height: auto;
}
.portofolio__item-image-container--art {
  border: 1px solid #eee;
  margin: -1px;
}
.portofolio__item-image {
  position: absolute;
  top: 10%;
  right: 15%;
  bottom: 10%;
  left: 15%;
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-align: center;
  -moz-box-align: center;
  -o-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -o-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}
@media (max-width: 839px) {
  .portofolio__item-image {
    top: 6%;
    right: 13%;
    bottom: 6%;
    left: 13%;
  }
}
.portofolio__item-image img {
  max-width: 100%;
  max-height: 100%;
  display: block;
}
.portofolio__item-image-wrapper {
  display: block;
  position: relative;
  height: 100%;
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-align: center;
  -moz-box-align: center;
  -o-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -o-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}
.portofolio__item-image-header {
  display: none;
  height: 8px;
  background: #e3e3e3;
  position: absolute;
  top: -8px;
  right: 0;
  bottom: auto;
  left: 0;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  padding-left: 4px;
}
@media (max-width: 839px) {
  .portofolio__item-image-header {
    height: 10px;
    top: -10px;
  }
}
.portofolio__item-image-header i {
  display: inline-block;
  width: 4px;
  height: 4px;
  background: #fff;
  border-radius: 50%;
  margin: 2px 2px 0 0;
  opacity: 0.9;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=90)";
  filter: alpha(opacity=90);
  float: left;
}
@media (max-width: 839px) {
  .portofolio__item-image-header i {
    margin-top: 3px;
  }
}
.portofolio__item-description {
  font-size: 17px;
  margin: 18px 0 60px;
  display: inline-block;
}
.portofolio__item-description,
.portofolio__item-description:hover,
.portofolio__item-description:focus,
.portofolio__item-description:visited {
  text-decoration: none;
  color: #111;
}
.portofolio__item-title,
.portofolio__item-subtitle {
  display: block;
}
.portofolio__item-title {
  display: block;
  margin: 5px 0;
  font-size: 20px;
  font-weight: bold;
  font-family: 'Lato', 'Proxima Nova', Verdana, Geneva, Arial, sans-serif;
}
.portofolio__item-subtitle {
  display: block;
  text-decoration: none;
}
.post {
  max-width: 642px;
  margin: 0 auto;
}
.post__title {
  font-family: 'Lato', 'Proxima Nova', Verdana, Geneva, Arial, sans-serif;
  font-weight: 300;
  font-size: 45px;
  line-height: 1.2;
  padding: 0;
  margin-top: 15px;
  margin-bottom: 25px;
  border: 0;
}
.post__title a {
  text-decoration: none;
  color: #111;
}
.post__date {
  font-style: italic;
  text-align: right;
  display: block;
}
.post__related {
  border-top: 1px solid #888;
  margin-top: 20px;
  padding-top: 20px;
}
.post__excerpt a {
  color: #111;
}
.post__excerpt a:hover,
.post__excerpt a:focus {
  text-decoration: none;
  color: #0096d7;
}
.post__excerpt:after {
  content: '';
  display: table;
  clear: both;
}
.post__excerpt-link {
  border: 1px solid #888;
  border-radius: 2px;
  display: inline-block;
  margin: 0;
  padding: 4px 10px;
}
.post__excerpt-link:hover,
.post__excerpt-link:focus {
  border: 1px solid #111;
}
.post code {
  color: #905;
  border: 1px solid #e1e1e8;
  background: #f7f7f9;
  border-radius: 3px;
  font-family: Monaco, 'Lucida Console', 'Courier New', monospace;
  font-size: 14px;
  padding: 0px 3px 1px;
}
.post pre {
  font-family: Monaco, 'Lucida Console', 'Courier New', monospace;
  font-size: 14px;
  clear: both;
}
.post pre code {
  backround: #f5f2f0;
  padding: 0.5em 0;
  display: block;
  border: 0;
  border-radius: 0;
}
.post pre code[class*='language-'] {
  color: #000;
  border: 0;
  background: none;
  border-radius: 0;
  padding: 0;
}
.post .prettyprint {
  font-size: 14px;
  font-family: Monaco, 'Lucida Console', 'Courier New', monospace;
  margin: 6px 0 12px;
  padding: 0 6px 2px;
  overflow: auto;
  background: #f5f2f0;
}
.post .prettyprint.linenums {
  padding: 0;
}
.post .prettyprint ol {
  padding-left: 6px;
}
.post .prettyprint code {
  font-size: 14px;
  border: 0;
  background: none;
  padding: 0;
}
.post p + .prettyprint {
  margin-top: -9px;
}
.post .prettyprint + p {
  margin-top: 24px;
}
.post img {
  max-width: 100%;
  height: auto;
  margin: 16px 0 12px;
}
.post img.alignleft,
.post img.alignright {
  margin: 0;
}
.post img.alignleft {
  float: left;
}
.post img.alignright {
  float: right;
}
.post img.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.post img + .caption {
  display: block;
  text-align: right;
  font-size: 90%;
}
.post .grid-tile {
  width: 25%;
  display: inline-block;
}
@media (max-width: 839px) {
  .post .grid-tile {
    width: 33%;
  }
}
.post .grid-tile img {
  max-width: 100%;
}
.post .grid-tile-large {
  width: 50%;
  display: inline-block;
}
.post .grid-tile-large img {
  max-width: 100%;
}
.sidebar {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 43px;
  min-height: 200px;
  border-right: 1px solid #888;
}
.sidebar__icons {
  width: 43px;
}
.sidebar__icon {
  display: inline-block;
  color: #888;
  fill: #888;
  font-size: 27px;
  padding: 8px;
  width: 27px;
  height: 27px;
}
.sidebar__icon.active {
  background: #f1f1f1;
  border-top: 1px solid #888;
  border-bottom: 1px solid #888;
  margin: -1px 0;
  position: relative;
}
.sidebar__icon.active,
.sidebar__icon.active:hover {
  color: #111;
  fill: #111;
}
.sidebar__icon.active:after {
  background: #f1f1f1;
  bottom: 0;
  content: '';
  display: block;
  position: absolute;
  right: -1px;
  top: 0;
  width: 1px;
}
.sidebar__icon:hover,
.sidebar__icon:focus {
  color: #0096d7;
  fill: #0096d7;
}
.trigger {
  display: none;
  position: absolute;
  top: 8px;
  right: 0;
  height: 26px;
  width: 41px;
  z-index: 101;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  -ms-transition: all 0.3s ease;
  transition: all 0.3s ease;
  padding: 3px;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}
@media (max-width: 839px) {
  .trigger {
    display: block;
  }
}
.trigger__lines,
.trigger__lines:before,
.trigger__lines:after {
  position: absolute;
  top: 10px;
  left: 2px;
  display: block;
  width: 30px;
  height: 5px;
  background: #888;
  border-radius: 2px;
  -webkit-transition: all 0.3s ease;
  -moz-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  -ms-transition: all 0.3s ease;
  transition: all 0.3s ease;
}
.trigger__lines:before,
.trigger__lines:after {
  content: '';
  left: 0;
}
.trigger__lines:before {
  top: -8px;
}
.trigger__lines:after {
  top: 8px;
}
body.sidebar-open .trigger {
  right: 0px;
  top: 0px;
  padding: 9px 2px;
}
body.sidebar-open .trigger__lines {
  background: transparent;
  top: 19px;
}
body.sidebar-open .trigger__lines:before,
body.sidebar-open .trigger__lines:after {
  -webkit-transform-origin: 50% 50%;
  -moz-transform-origin: 50% 50%;
  -o-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
  top: 0;
}
body.sidebar-open .trigger__lines:before {
  -webkit-transform: rotate3d(0, 0, 1, 45deg);
  -moz-transform: rotate3d(0, 0, 1, 45deg);
  -o-transform: rotate3d(0, 0, 1, 45deg);
  -ms-transform: rotate3d(0, 0, 1, 45deg);
  transform: rotate3d(0, 0, 1, 45deg);
}
body.sidebar-open .trigger__lines:after {
  -webkit-transform: rotate3d(0, 0, 1, -45deg);
  -moz-transform: rotate3d(0, 0, 1, -45deg);
  -o-transform: rotate3d(0, 0, 1, -45deg);
  -ms-transform: rotate3d(0, 0, 1, -45deg);
  transform: rotate3d(0, 0, 1, -45deg);
}
.huskyRock__card {
  width: 50%;
  height: 130px;
  border: 1px solid #ccc;
  float: left;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
}
.huskyRock__cardImage {
  height: 100px;
  width: 100%;
}
.huskyRock__cardImage img {
  display: block;
  max-width: 100%;
  max-height: 100%;
  margin: 0 auto;
}
.huskyRock__cardTitle {
  text-align: center;
}
.huskyRock__cardCount {
  position: absolute;
  top: 0;
  right: 0;
  min-width: 24px;
  text-align: center;
  background: #eee;
  color: #666;
  padding: 2px;
  border-bottom-left-radius: 12px;
}
.huskyRock__infoSectionWrapper {
  clear: both;
}
.huskyRock__infoSection {
  padding: 20px 0 12px;
}
.huskyRock__infoTitle {
  cursor: pointer;
  display: block;
}
.huskyRock__map {
  border: 1px solid #ccc;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
}
.huskyRock__map img {
  margin: 0;
  display: block;
}
.huskyRock__mapOverlayRocks {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.huskyRock__mapSequenceStep {
  position: absolute;
  background: #008000;
  opacity: 0.5;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  filter: alpha(opacity=50);
  border-radius: 4px;
}
.huskyRock__mapSequenceNote {
  position: absolute;
  background: rgba(255,0,0,0.3);
  border-radius: 4px;
}
.huskyRock__mapSequenceNoteText {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  color: #f00;
  text-align: center;
  text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff;
}
.huskyRock__mapSequenceStep--default {
  background: #808080;
}
.huskyRock__mapOverlayLines {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
